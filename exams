
// models/User.js
const mongoose= require("mongoose")

const userSchema= new mongoose.Schema({
    name:{
        type: String,
        required: true
    },
    email:{
        type: String,
        required: true,
        unique: true
    },
    password:{
        type: String,
        required: true
    },
    dateOfBirth:{
        type:Date
    },
    isAdmin:{
        type: Boolean,
        default: faulse
    },
    kyc:{
        type:
        mongoose.Schema.Types.ObjectId,ref:"KYC"
    }, // one to one
    posts: [{
        type: mongoose.Schema.Types.ObjectId,ref:"post"
    }], // one to many
    }, {timestamps: true})

    // KYC Model

// models/KYC.js
const mongoose= require("mongoose"),

const kycSchema= new mongoose.Schema({
    user:{type:
        mongoose.Schema.Types.ObjectId,ref:"User", unique:true
    }, // one to one
    nationalId: {
        type:String,
        required:true
    },
    verified:{
        type:Boolean, 
        default: false
    }
},{timestamp: true}),

//creating a post model 

const mongoose= require("mongoose"),
const postSchema= new mongoose.Schema({
    user:{
        type: mongoose.Schema.Types.ObjectId,
        ref:"User",
        required: true
    },
    tittle:{
        type:String,
        required:true,
        trim: true
    },
    content:{
        type:String,
        required:true
    },{timestamp:true}),


// creating a KYC model

const mongoose= require("mongoose"),
const KycSchema= new mongoose.Schema({
    user:{
        type: mongoose.Schema.Types.ObjectId, 
        ref:"User",
        required:true,
        unique: true
    }, 
    fullName:{
        type: String,
        required: true
    },
    nationalId:{
        type: String,
        required:true,
        unique: true
    },
    phoneNumber:{
        type: string,
        required:true
    },
    isVerified:{
        type:Boolean,
        default: false
    }
    
},{timestamps:true}),

module.exports= mongoose.model("KYC",kycSchema)

//aunthenticate the user in the login controller

const express= require("express"),
const router= express.Router(),
const{loginUser}= require("../controllers/userController"),

Router.post("/login", loginUser),

module.exports= router, 

// creating a middleware for authorization
const jwt= require("jsonwebtoken"),
const JWT_SECRET= process.env.JWT_SECRET
const authorize=(req,res,next)=>{
    const authHeader=
    req.headers.authorization,
    // check if token is present
    if(!authHeader||!
        authHeader.startWith("Bearer"){
            return res.status(401).json({
                message:"no token, authorization denied"
            }),
        },
    ),
},
module.exports= authorize